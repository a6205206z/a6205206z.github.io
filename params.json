{
  "name": "Cean Cheng - GitHub.io",
  "tagline": "Cean Cheng",
  "body": "#Scrapy模拟淘宝登录并抓取个人订单数据\r\n--- \r\n\r\n##Environment:\r\n>Python版本：2.7.12\r\n\r\n>Scrapy版本：1.1.2\r\n\r\n##描述：\r\n\r\n首先要获取登录需要的数据\r\n1.通过firefox 登陆淘宝，成功登陆之后 通过查看https://login.taobao.com/member/login.jhtml的请求体抓取以下数据将图片中的数据 收集之后 添加到 请求体中\r\n\r\n        self.post = post = {\r\n            'TPL_username':self.username,\r\n            'TPL_password':'',\r\n            'ncoSig':'',\r\n            'ncoSessionid':'',\r\n            'ncoToken':'',\r\n            'slideCodeShow':'false',\r\n            'lang':'zh_CN',\r\n            'loginsite':'0',\r\n            'newlogin':'0',\r\n            'TPL_redirect_url':'',\r\n            'from':'tb',\r\n            'fc':'default',\r\n            'style':'default',\r\n            'css_style':'',\r\n            'keyLogin':'false',\r\n            'qrLogin':'true',\r\n            'newMini':'false',\r\n            'newMini2':'false',\r\n            'tid':'',\r\n            'loginType':'3',\r\n            'minititle':'',\r\n            'minipara':'',\r\n            'pstrong':'',\r\n            'sign':'',\r\n            'need_sign':'',\r\n            'isIgnore':'',\r\n            'full_redirect':'',\r\n            'sub_jump':'',\r\n            'popid':'',\r\n            'callback':'',\r\n            'guf':'',\r\n            'not_duplite_str':'',\r\n            'need_user_id':'',\r\n            'poy':'',\r\n            'gvfdcname':'10',\r\n            'gvfdcre':'',\r\n            'from_encoding':'',\r\n            'sub':'',\r\n            'TPL_password_2':self.password2,\r\n            'loginASR':'1',\r\n            'loginASRSuc':'1',\r\n            'allp':'',\r\n            'oslanguage':'zh-CN',\r\n            'sr':'1536*864',\r\n            'osVer':'',\r\n            'naviVer':'firefox|48',\r\n            'miserHardInfo':'',\r\n            'ua':self.ua,\r\n            'um_token':''\r\n        }\r\n\r\n2.构造请求头\r\n```\r\n'Host':'login.taobao.com',\r\n'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0',\r\n'Referer' : 'https://login.taobao.com/member/login.jhtml',\r\n'Content-Type': 'application/x-www-form-urlencoded',\r\n'Connection' : 'Keep-Alive'\r\n```\r\n\r\n3.将刚才生抓取的post data 和 构造的请求头一起发送请求到https://login.taobao.com/member/login.jhtml\r\n\r\n4.成功之后 会得到body含有https://passport.alibaba.com/mini_apply_st.js\\?site=0&token=(.*?)& 的响应\r\n\r\n5.提取出url 直接get方式请求，会得到body含有{\\\"st\\\":\\\"(.*?)\\\"}的响应\r\n\r\n6.将上面步骤中获取到的st 加入到https://login.taobao.com/member/vst.htm?st=[st]&TPL_username=[username]中，并发送get 请求，之后会得到cookie值，将cookie保存起来 这样就算登陆成功了\r\n\r\n7.之后请求的时候带上cookie 便会保持登陆的会话了\r\n\r\n##以下是 spider的代码：\r\n\r\n>注意：在登录之后要始终保持cookie\r\n>使用 第一次请求使用meta = {'cookiejar' : 1} 之后使用meta = {'cookiejar' : response.meta['cookiejar']}\r\n\r\n```python\r\n#xmmspider.spiders\r\n# -*- coding: utf-8 -*-\r\nimport re\r\nimport logging\r\nimport json\r\n\r\nfrom scrapy import Spider,Request,FormRequest\r\nfrom utils import extract_one,extract\r\nfrom scrapy.selector import Selector\r\nfrom xmmspider.taobaologin import TaobaoLogin\r\nfrom xmmspider.items import TaobaoOrderItem\r\n\r\n\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\nclass TaobaoOrderSpider(Spider):\r\n    login_url = \"https://login.taobao.com/member/login.jhtml\"\r\n    order_items_url = \"https://buyertrade.taobao.com/trade/itemlist/asyncBought.htm?action=itemlist/BoughtQueryAction&event_submit_do_query=1&_input_charset=utf8\"\r\n    crawl_url = 'https://buyertrade.taobao.com/trade/itemlist/list_bought_items.htm'\r\n    login_headers =  {\r\n        'Host':'login.taobao.com',\r\n        'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0',\r\n        'Referer' : 'https://login.taobao.com/member/login.jhtml',\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Connection' : 'Keep-Alive'\r\n    }\r\n    headers = {\r\n        'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0',\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Connection' : 'Keep-Alive'\r\n    }\r\n    username = ''#taobao user name\r\n    ua = ''  #ua_code\r\n    password2 = '' #password2\r\n    post = {\r\n        'TPL_username':username,\r\n        'TPL_password':'',\r\n        'ncoSig':'',\r\n        'ncoSessionid':'',\r\n        'ncoToken':'73743bd7087e562773a6798e0be429c41aa9129e',\r\n        'slideCodeShow':'false',\r\n        'lang':'zh_CN',\r\n        'loginsite':'0',\r\n        'newlogin':'0',\r\n        'TPL_redirect_url':'',\r\n        'from':'tb',\r\n        'fc':'default',\r\n        'style':'default',\r\n        'css_style':'',\r\n        'keyLogin':'false',\r\n        'qrLogin':'true',\r\n        'newMini':'false',\r\n        'newMini2':'false',\r\n        'tid':'',\r\n        'loginType':'3',\r\n        'minititle':'',\r\n        'minipara':'',\r\n        'pstrong':'',\r\n        'sign':'',\r\n        'need_sign':'',\r\n        'isIgnore':'',\r\n        'full_redirect':'',\r\n        'sub_jump':'',\r\n        'popid':'',\r\n        'callback':'',\r\n        'guf':'',\r\n        'not_duplite_str':'',\r\n        'need_user_id':'',\r\n        'poy':'',\r\n        'gvfdcname':'10',\r\n        'gvfdcre':'',\r\n        'from_encoding':'',\r\n        'sub':'',\r\n        'TPL_password_2':password2,\r\n        'loginASR':'1',\r\n        'loginASRSuc':'1',\r\n        'allp':'',\r\n        'oslanguage':'zh-CN',\r\n        'sr':'1536*864',\r\n        'osVer':'',\r\n        'naviVer':'firefox|48',\r\n        'miserHardInfo':'',\r\n        'ua':ua,\r\n        'um_token':'HV01PAAZ0ab2a16965ccf77857b3ffe0000d7439'\r\n    }\r\n    name = \"TaobaoOrderSpider\"\r\n    download_delay= 5\r\n    allowed_domains = [\"taobao.com\",\"passport.alibaba.com\"]\r\n    \r\n    #抓取登录链接\r\n    def start_requests(self):\r\n        return [Request(self.login_url,\r\n\t\t    meta = {'cookiejar' : 1}, \r\n            headers = self.headers,\r\n\t\t    callback = self.post_login)]\r\n    \r\n    #提交登录请求\r\n    def post_login(self, response):\r\n    \treturn [FormRequest.from_response(response,\r\n    \t\tmethod = 'POST',\r\n\t\t    meta = {'cookiejar' : response.meta['cookiejar']}, \r\n\t\t    headers = self.login_headers,\r\n\t\t    formdata = self.post,\r\n\t\t    callback = self.search_token,\r\n\t\t    dont_filter = True, \r\n\t\t    )]\r\n\r\n    #登录成功之后 抓取出token\r\n    def search_token(self,response):\r\n    \ttokenPattern = re.compile('https://passport.alibaba.com/mini_apply_st.js\\?site=0&token=(.*?)&')\r\n    \ttokenMatch = re.search(tokenPattern,response.body)\r\n    \tif tokenMatch:\r\n    \t\tlogger.log(1,\"token found\")\r\n    \t\ttoken = tokenMatch.group(1)\r\n    \t\ttokenURL = 'https://passport.alibaba.com/mini_apply_st.js?site=0&token=%s&callback=stCallback6' % token\r\n\r\n    \t\treturn [Request(tokenURL,\r\n\t\t\t    meta = {'cookiejar' : response.meta['cookiejar']}, \r\n                headers = self.headers,\r\n\t\t\t    callback = self.search_st,\r\n\t\t\t    )]\r\n    \telse:\r\n    \t\tlogger.warning(\"login failed[on search_token]\")\r\n\r\n    #抓取出st code\r\n    def search_st(self,response):\r\n    \tpattern = re.compile('{\"st\":\"(.*?)\"}',re.S)\r\n    \tresult = re.search(pattern,response.body)\r\n    \tif result:\r\n    \t\tlogger.log(1,\"st code found\")\r\n    \t\tst = result.group(1)\r\n    \t\tstURL = 'https://login.taobao.com/member/vst.htm?st=%s&TPL_username=%s' % (st,self.username)\r\n    \t\treturn [Request(stURL,\r\n    \t\t\tmethod = \"GET\",\r\n                headers = self.headers,\r\n\t\t\t    meta = {'cookiejar' : response.meta['cookiejar']}, \r\n\t\t\t    callback = self.login_process,\r\n\t\t\t    )]\r\n    \telse:\r\n    \t\tlogger.warning(\"login failed[on search_st]\")\r\n    \r\n    #用st code 进行登录\r\n    def login_process(self,response):\r\n        pattern = re.compile('top.location.href = \"(.*?)\"',re.S)\r\n        match = re.search(pattern,response.body)\r\n        if match:\r\n            logger.log(1,\"st code found\")\r\n            return [Request(\r\n\t            self.crawl_url,\r\n\t            method = 'GET',\r\n\t            meta = {'cookiejar' : response.meta['cookiejar']},\r\n\t            headers = self.headers,\r\n\t            dont_filter = True,\r\n\t    \t    callback = self.start_crawl,\r\n\t        )]\r\n        else:\r\n            logger.warning(\"login failed[on search_st]\")\r\n\r\n    #开始爬取订单列表\r\n    def start_crawl(self, response):\r\n        #find next page\r\n        #from first pages to start \r\n        pattern = re.compile('\"totalPage\":(.*?)},',re.S)\r\n        match = re.search(pattern,response.body)\r\n        if(match):\r\n            totalPage = int(match.group(1))#get total page\r\n            if totalPage > 0:\r\n                pageNum = 0\r\n                while pageNum <= totalPage:\r\n                    pageNum+=1\r\n                    yield FormRequest(\r\n                        self.order_items_url,\r\n                        method=\"POST\",\r\n                        headers=self.headers,\r\n                        formdata={\r\n                            'pageNum':str(pageNum),\r\n                            'pageSize':'15',\r\n                            'action':'itemlist/BoughtQueryAction',\r\n                            'prePageNo':'1',\r\n                            'buyerNick':'',\r\n                            'dateBegin':'0',\r\n                            'dateEnd':'0',\r\n                            'lastStartRow':'',\r\n                            'logisticsService':'',\r\n                            'options':'0',\r\n                            'orderStatus':'',\r\n                            'queryBizType':'',\r\n                            'queryOrder':'desc',\r\n                            'rateStatus':'',\r\n                            'refund':'',\r\n                            'sellerNick':'',\r\n                            },\r\n                        callback=self.parse_item,\r\n                        meta={'cookiejar' : response.meta['cookiejar']}\r\n                        )\r\n\r\n    def parse_item(self, response):\r\n        item = TaobaoOrderItem()\r\n        item[\"order_json\"] = response.body_as_unicode()\r\n        return item\r\n```\r\n\r\n配置文件新增：\r\n```python\r\n#cookies\r\nCOOKIES_ENABLED = True  #是否启用cookie\r\nCOOKIES_DEBUG = False    #是否启用cookie调试\r\n\r\nDOWNLOADER_MIDDLEWARES = {\r\n    'scrapy.downloadermiddlewares.cookies.CookiesMiddleware': 700, #新增cookie中间件\r\n}\r\n\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}